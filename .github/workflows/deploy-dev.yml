# B"H
# This workflow will build a docker container, publish it to Google Container Registry, and deploy it to GKE when a release is created
#
# For more support on how to run the workflow, please visit https://github.com/google-github-actions/setup-gcloud/tree/master/example-workflows/gke

name: Build and Deploy to GKE DEV

on:
  workflow_dispatch:

  push:
    branches: 
    - "*"
    - '!master'
    - '!dev'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }} # TODO: update to cluster name
  GKE_ZONE: us-central1-c   # TODO: update to cluster zone
  DEPLOYMENT_NAME: fcc-basic-node-and-express # TODO: update to deployment name
  IMAGE: fcc-basic-node-and-express
  ENVIRONMENT: dev
  REGISTRY: smuel770
  # IMAGE_DIGEST: ""

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest


    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - run: |
        git log --pretty=oneline --max-count 20 > static/log.html
        ls -la
        ls -la static
        cat static/log.html

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker
        docker login -u ${{ secrets.DOCKERHUB_USER }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    # Build the Docker image
    - name: Build
      run: |-
        docker build \
          --tag "$REGISTRY/$IMAGE:$GITHUB_SHA" \
          --build-arg GITHUB_SHA="$GITHUB_SHA" \
          --build-arg GITHUB_REF="$GITHUB_REF" \
          .

    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        # IMAGE_DIGEST=$(docker images --no-trunc --quiet "$REGISTRY/$IMAGE:$GITHUB_SHA")
        echo $IMAGE_DIGEST
        docker push "$REGISTRY/$IMAGE:$GITHUB_SHA"

    - name: Set up Helm
      run: |-
        cd ..
        wget https://get.helm.sh/helm-v3.5.0-linux-amd64.tar.gz
        tar xvzf helm-v3.5.0-linux-amd64.tar.gz
        cd FCC-Basic-Node-and-Express/
        cp ../linux-amd64/helm ./helm
        chmod u+x ./helm

    - name: Install app helm chart
      run: |-
        chmod u+x ./install/install-chart.sh
        ls -la
        pwd
        ls -la ..
        cd install/
        echo "gcr.io\/$PROJECT_ID\/$IMAGE"
        DIGEST=$(docker image inspect --format "{{.RepoDigests}}" "$REGISTRY/$IMAGE:$GITHUB_SHA" | awk -F ":" '{print $2}' | awk -F "]" '{print $1}')
        ./install-chart.sh $DIGEST "$REGISTRY\/$IMAGE@sha256"        
        